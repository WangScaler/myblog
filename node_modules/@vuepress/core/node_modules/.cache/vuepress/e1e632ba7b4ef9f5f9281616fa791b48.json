{"remainingRequest":"D:\\mygithub\\mydocs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\mygithub\\mydocs\\node_modules\\vuepress-theme-reco\\components\\Page.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\mygithub\\mydocs\\node_modules\\vuepress-theme-reco\\components\\Page.vue","mtime":499162500000},{"path":"D:\\mygithub\\mydocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mygithub\\mydocs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\mygithub\\mydocs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mygithub\\mydocs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQYWdlSW5mbyBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9QYWdlSW5mbycKaW1wb3J0IHsgcmVzb2x2ZVBhZ2UsIG91dGJvdW5kUkUsIGVuZGluZ1NsYXNoUkUgfSBmcm9tICdAdGhlbWUvaGVscGVycy91dGlscycKaW1wb3J0IE1vZHVsZVRyYW5zaXRpb24gZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTW9kdWxlVHJhbnNpdGlvbicKaW1wb3J0IG1vZHVsZVRyYW5zaXRvbk1peGluIGZyb20gJ0B0aGVtZS9taXhpbnMvbW9kdWxlVHJhbnNpdG9uJwppbXBvcnQgU3ViU2lkZWJhciBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9TdWJTaWRlYmFyJwoKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW21vZHVsZVRyYW5zaXRvbk1peGluXSwKICBjb21wb25lbnRzOiB7IFBhZ2VJbmZvLCBNb2R1bGVUcmFuc2l0aW9uLCBTdWJTaWRlYmFyIH0sCgogIHByb3BzOiBbJ3NpZGViYXJJdGVtcyddLAoKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzSGFzS2V5OiB0cnVlCiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOaYr+WQpuaYvuekuuivhOiuugogICAgc2hvdWxkU2hvd0NvbW1lbnRzICgpIHsKICAgICAgY29uc3QgeyBpc1Nob3dDb21tZW50cyB9ID0gdGhpcy4kZnJvbnRtYXR0ZXIKICAgICAgY29uc3QgeyBzaG93Q29tbWVudCB9ID0gdGhpcy4kdGhlbWVDb25maWcudmFsaW5lQ29uZmlnIHx8IHsgc2hvd0NvbW1lbnQ6IHRydWUgfQogICAgICByZXR1cm4gKHNob3dDb21tZW50ICE9PSBmYWxzZSAmJiBpc1Nob3dDb21tZW50cyAhPT0gZmFsc2UpIHx8IChzaG93Q29tbWVudCA9PT0gZmFsc2UgJiYgaXNTaG93Q29tbWVudHMgPT09IHRydWUpCiAgICB9LAogICAgc2hvd0FjY2Vzc051bWJlciAoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICAkdGhlbWVDb25maWc6IHsgdmFsaW5lQ29uZmlnIH0sCiAgICAgICAgJHRoZW1lTG9jYWxlQ29uZmlnOiB7IHZhbGluZUNvbmZpZzogdmFsaW5lTG9jYWxDb25maWcgfQogICAgICB9ID0gdGhpcwoKICAgICAgY29uc3QgdmMgPSB2YWxpbmVMb2NhbENvbmZpZyB8fCB2YWxpbmVDb25maWcKICAgICAgaWYgKHZjICYmIHZjLnZpc2l0b3IgIT0gZmFsc2UpIHsKICAgICAgICByZXR1cm4gdHJ1ZQogICAgICB9CiAgICAgIHJldHVybiBmYWxzZQogICAgfSwKICAgIGxhc3RVcGRhdGVkICgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHBhZ2UubGFzdFVwZGF0ZWQKICAgIH0sCiAgICBsYXN0VXBkYXRlZFRleHQgKCkgewogICAgICBpZiAodHlwZW9mIHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLmxhc3RVcGRhdGVkID09PSAnc3RyaW5nJykgewogICAgICAgIHJldHVybiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5sYXN0VXBkYXRlZAogICAgICB9CiAgICAgIGlmICh0eXBlb2YgdGhpcy4kdGhlbWVDb25maWcubGFzdFVwZGF0ZWQgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHRoZW1lQ29uZmlnLmxhc3RVcGRhdGVkCiAgICAgIH0KICAgICAgcmV0dXJuICdMYXN0IFVwZGF0ZWQnCiAgICB9LAogICAgcHJldiAoKSB7CiAgICAgIGNvbnN0IHByZXYgPSB0aGlzLiRmcm9udG1hdHRlci5wcmV2CiAgICAgIGlmIChwcmV2ID09PSBmYWxzZSkgewogICAgICAgIHJldHVybgogICAgICB9IGVsc2UgaWYgKHByZXYpIHsKICAgICAgICByZXR1cm4gcmVzb2x2ZVBhZ2UodGhpcy4kc2l0ZS5wYWdlcywgcHJldiwgdGhpcy4kcm91dGUucGF0aCkKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gcmVzb2x2ZVByZXYodGhpcy4kcGFnZSwgdGhpcy5zaWRlYmFySXRlbXMpCiAgICAgIH0KICAgIH0sCiAgICBuZXh0ICgpIHsKICAgICAgY29uc3QgbmV4dCA9IHRoaXMuJGZyb250bWF0dGVyLm5leHQKICAgICAgaWYgKG5leHQgPT09IGZhbHNlKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0gZWxzZSBpZiAobmV4dCkgewogICAgICAgIHJldHVybiByZXNvbHZlUGFnZSh0aGlzLiRzaXRlLnBhZ2VzLCBuZXh0LCB0aGlzLiRyb3V0ZS5wYXRoKQogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiByZXNvbHZlTmV4dCh0aGlzLiRwYWdlLCB0aGlzLnNpZGViYXJJdGVtcykKICAgICAgfQogICAgfSwKICAgIGVkaXRMaW5rICgpIHsKICAgICAgaWYgKHRoaXMuJGZyb250bWF0dGVyLmVkaXRMaW5rID09PSBmYWxzZSkgewogICAgICAgIHJldHVybiBmYWxzZQogICAgICB9CiAgICAgIGNvbnN0IHsKICAgICAgICByZXBvLAogICAgICAgIGVkaXRMaW5rcywKICAgICAgICBkb2NzRGlyID0gJycsCiAgICAgICAgZG9jc0JyYW5jaCA9ICdtYXN0ZXInLAogICAgICAgIGRvY3NSZXBvID0gcmVwbwogICAgICB9ID0gdGhpcy4kdGhlbWVDb25maWcKCiAgICAgIGlmIChkb2NzUmVwbyAmJiBlZGl0TGlua3MgJiYgdGhpcy4kcGFnZS5yZWxhdGl2ZVBhdGgpIHsKICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVFZGl0TGluayhyZXBvLCBkb2NzUmVwbywgZG9jc0RpciwgZG9jc0JyYW5jaCwgdGhpcy4kcGFnZS5yZWxhdGl2ZVBhdGgpCiAgICAgIH0KICAgICAgcmV0dXJuICcnCiAgICB9LAogICAgZWRpdExpbmtUZXh0ICgpIHsKICAgICAgcmV0dXJuICgKICAgICAgICB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5lZGl0TGlua1RleHQgfHwgdGhpcy4kdGhlbWVDb25maWcuZWRpdExpbmtUZXh0IHx8IGBFZGl0IHRoaXMgcGFnZWAKICAgICAgKQogICAgfSwKICAgIHBhZ2VTdHlsZSAoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzaG93U3ViU2lkZUJhciA/IHt9IDogeyBwYWRkaW5nUmlnaHQ6ICcwJyB9CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgY3JlYXRlRWRpdExpbmsgKHJlcG8sIGRvY3NSZXBvLCBkb2NzRGlyLCBkb2NzQnJhbmNoLCBwYXRoKSB7CiAgICAgIGNvbnN0IGJpdGJ1Y2tldCA9IC9iaXRidWNrZXQub3JnLwogICAgICBpZiAoYml0YnVja2V0LnRlc3QocmVwbykpIHsKICAgICAgICBjb25zdCBiYXNlID0gb3V0Ym91bmRSRS50ZXN0KGRvY3NSZXBvKQogICAgICAgICAgPyBkb2NzUmVwbwogICAgICAgICAgOiByZXBvCiAgICAgICAgcmV0dXJuICgKICAgICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykgKwogICAgICAgICAgIGAvc3JjYCArCiAgICAgICAgICAgYC8ke2RvY3NCcmFuY2h9L2AgKwogICAgICAgICAgIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArICcvJyA6ICcnKSArCiAgICAgICAgICAgcGF0aCArCiAgICAgICAgICAgYD9tb2RlPWVkaXQmc3BhPTAmYXQ9JHtkb2NzQnJhbmNofSZmaWxldmlld2VyPWZpbGUtdmlldy1kZWZhdWx0YAogICAgICAgICkKICAgICAgfQoKICAgICAgY29uc3QgYmFzZSA9IG91dGJvdW5kUkUudGVzdChkb2NzUmVwbykKICAgICAgICA/IGRvY3NSZXBvCiAgICAgICAgOiBgaHR0cHM6Ly9naXRodWIuY29tLyR7ZG9jc1JlcG99YAogICAgICByZXR1cm4gKAogICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykgKwogICAgICAgIGAvZWRpdGAgKwogICAgICAgIGAvJHtkb2NzQnJhbmNofS9gICsKICAgICAgICAoZG9jc0RpciA/IGRvY3NEaXIucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykgKyAnLycgOiAnJykgKwogICAgICAgIHBhdGgKICAgICAgKQogICAgfQogIH0KfQoKZnVuY3Rpb24gcmVzb2x2ZVByZXYgKHBhZ2UsIGl0ZW1zKSB7CiAgcmV0dXJuIGZpbmQocGFnZSwgaXRlbXMsIC0xKQp9CgpmdW5jdGlvbiByZXNvbHZlTmV4dCAocGFnZSwgaXRlbXMpIHsKICByZXR1cm4gZmluZChwYWdlLCBpdGVtcywgMSkKfQoKZnVuY3Rpb24gZmluZCAocGFnZSwgaXRlbXMsIG9mZnNldCkgewogIGNvbnN0IHJlcyA9IFtdCiAgZmxhdHRlbihpdGVtcywgcmVzKQogIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzLmxlbmd0aDsgaSsrKSB7CiAgICBjb25zdCBjdXIgPSByZXNbaV0KICAgIGlmIChjdXIudHlwZSA9PT0gJ3BhZ2UnICYmIGN1ci5wYXRoID09PSBkZWNvZGVVUklDb21wb25lbnQocGFnZS5wYXRoKSkgewogICAgICByZXR1cm4gcmVzW2kgKyBvZmZzZXRdCiAgICB9CiAgfQp9CgpmdW5jdGlvbiBmbGF0dGVuIChpdGVtcywgcmVzKSB7CiAgZm9yIChsZXQgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgIGlmIChpdGVtc1tpXS50eXBlID09PSAnZ3JvdXAnKSB7CiAgICAgIGZsYXR0ZW4oaXRlbXNbaV0uY2hpbGRyZW4gfHwgW10sIHJlcykKICAgIH0gZWxzZSB7CiAgICAgIHJlcy5wdXNoKGl0ZW1zW2ldKQogICAgfQogIH0KfQoK"},null]}