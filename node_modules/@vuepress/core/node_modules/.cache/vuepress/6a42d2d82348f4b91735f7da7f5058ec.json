{"remainingRequest":"D:\\mygithub\\myblogs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\mygithub\\myblogs\\node_modules\\@vuepress\\core\\lib\\client\\root-mixins\\updateMeta.js","dependencies":[{"path":"D:\\mygithub\\myblogs\\node_modules\\@vuepress\\core\\lib\\client\\root-mixins\\updateMeta.js","mtime":499162500000},{"path":"D:\\mygithub\\myblogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mygithub\\myblogs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJEOi9teWdpdGh1Yi9teWJsb2dzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICJEOi9teWdpdGh1Yi9teWJsb2dzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0IHVuaW9uQnkgZnJvbSAnbG9kYXNoL3VuaW9uQnknOwpleHBvcnQgZGVmYXVsdCB7CiAgLy8gY3JlYXRlZCB3aWxsIGJlIGNhbGxlZCBvbiBib3RoIGNsaWVudCBhbmQgc3NyCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2l0ZU1ldGEgPSB0aGlzLiRzaXRlLmhlYWRUYWdzLmZpbHRlcihmdW5jdGlvbiAoX3JlZikgewogICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAxKSwKICAgICAgICAgIGhlYWRlclR5cGUgPSBfcmVmMlswXTsKCiAgICAgIHJldHVybiBoZWFkZXJUeXBlID09PSAnbWV0YSc7CiAgICB9KS5tYXAoZnVuY3Rpb24gKF9yZWYzKSB7CiAgICAgIHZhciBfcmVmNCA9IF9zbGljZWRUb0FycmF5KF9yZWYzLCAyKSwKICAgICAgICAgIF8gPSBfcmVmNFswXSwKICAgICAgICAgIGhlYWRlclZhbHVlID0gX3JlZjRbMV07CgogICAgICByZXR1cm4gaGVhZGVyVmFsdWU7CiAgICB9KTsKCiAgICBpZiAodGhpcy4kc3NyQ29udGV4dCkgewogICAgICB2YXIgbWVyZ2VkTWV0YUl0ZW1zID0gdGhpcy5nZXRNZXJnZWRNZXRhVGFncygpOwogICAgICB0aGlzLiRzc3JDb250ZXh0LnRpdGxlID0gdGhpcy4kdGl0bGU7CiAgICAgIHRoaXMuJHNzckNvbnRleHQubGFuZyA9IHRoaXMuJGxhbmc7CiAgICAgIHRoaXMuJHNzckNvbnRleHQucGFnZU1ldGEgPSByZW5kZXJQYWdlTWV0YShtZXJnZWRNZXRhSXRlbXMpOwogICAgfQogIH0sCiAgLy8gT3RoZXIgbGlmZSBjeWNsZXMgd2lsbCBvbmx5IGJlIGNhbGxlZCBhdCBjbGllbnQKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy8gaW5pdCBjdXJyZW50TWV0YVRhZ3MgZnJvbSBET00KICAgIHRoaXMuY3VycmVudE1ldGFUYWdzID0gX3RvQ29uc3VtYWJsZUFycmF5KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ21ldGEnKSk7IC8vIHVwZGF0ZSB0aXRsZSAvIG1ldGEgdGFncwoKICAgIHRoaXMudXBkYXRlTWV0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlTWV0YTogZnVuY3Rpb24gdXBkYXRlTWV0YSgpIHsKICAgICAgZG9jdW1lbnQudGl0bGUgPSB0aGlzLiR0aXRsZTsKICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmxhbmcgPSB0aGlzLiRsYW5nOwogICAgICB2YXIgbmV3TWV0YVRhZ3MgPSB0aGlzLmdldE1lcmdlZE1ldGFUYWdzKCk7CiAgICAgIHRoaXMuY3VycmVudE1ldGFUYWdzID0gdXBkYXRlTWV0YVRhZ3MobmV3TWV0YVRhZ3MsIHRoaXMuY3VycmVudE1ldGFUYWdzKTsKICAgIH0sCiAgICBnZXRNZXJnZWRNZXRhVGFnczogZnVuY3Rpb24gZ2V0TWVyZ2VkTWV0YVRhZ3MoKSB7CiAgICAgIHZhciBwYWdlTWV0YSA9IHRoaXMuJHBhZ2UuZnJvbnRtYXR0ZXIubWV0YSB8fCBbXTsgLy8gcGFnZU1ldGFUYWdzIGhhdmUgaGlnaGVyIHByaW9yaXR5IHRoYW4gc2l0ZU1ldGFUYWdzCiAgICAgIC8vIGRlc2NyaXB0aW9uIG5lZWRzIHNwZWNpYWwgYXR0ZW50aW9uIGFzIGl0IGhhcyB0b28gbWFueSBlbnRyaWVzCgogICAgICByZXR1cm4gdW5pb25CeShbewogICAgICAgIG5hbWU6ICdkZXNjcmlwdGlvbicsCiAgICAgICAgY29udGVudDogdGhpcy4kZGVzY3JpcHRpb24KICAgICAgfV0sIHBhZ2VNZXRhLCB0aGlzLnNpdGVNZXRhLCBtZXRhSWRlbnRpZmllcik7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJHBhZ2U6IGZ1bmN0aW9uICRwYWdlKCkgewogICAgICB0aGlzLnVwZGF0ZU1ldGEoKTsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB1cGRhdGVNZXRhVGFncyhudWxsLCB0aGlzLmN1cnJlbnRNZXRhVGFncyk7CiAgfQp9OwovKioKICogUmVwbGFjZSBjdXJyZW50TWV0YVRhZ3Mgd2l0aCBuZXdNZXRhVGFncwogKiBAcGFyYW0ge0FycmF5PE9iamVjdD59IG5ld01ldGFUYWdzCiAqIEBwYXJhbSB7QXJyYXk8SFRNTEVsZW1lbnQ+fSBjdXJyZW50TWV0YVRhZ3MKICogQHJldHVybnMge0FycmF5PEhUTUxFbGVtZW50Pn0KICovCgpmdW5jdGlvbiB1cGRhdGVNZXRhVGFncyhuZXdNZXRhVGFncywgY3VycmVudE1ldGFUYWdzKSB7CiAgaWYgKGN1cnJlbnRNZXRhVGFncykgewogICAgX3RvQ29uc3VtYWJsZUFycmF5KGN1cnJlbnRNZXRhVGFncykuZmlsdGVyKGZ1bmN0aW9uIChjKSB7CiAgICAgIHJldHVybiBjLnBhcmVudE5vZGUgPT09IGRvY3VtZW50LmhlYWQ7CiAgICB9KS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7CiAgICAgIHJldHVybiBkb2N1bWVudC5oZWFkLnJlbW92ZUNoaWxkKGMpOwogICAgfSk7CiAgfQoKICBpZiAobmV3TWV0YVRhZ3MpIHsKICAgIHJldHVybiBuZXdNZXRhVGFncy5tYXAoZnVuY3Rpb24gKG0pIHsKICAgICAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ21ldGEnKTsKICAgICAgT2JqZWN0LmtleXMobSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgdGFnLnNldEF0dHJpYnV0ZShrZXksIG1ba2V5XSk7CiAgICAgIH0pOwogICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHRhZyk7CiAgICAgIHJldHVybiB0YWc7CiAgICB9KTsKICB9Cn0KLyoqCiAqIFRyeSB0byBpZGVudGlmeSBhIG1ldGEgdGFnIGJ5IG5hbWUsIHByb3BlcnR5IG9yIGl0ZW1wcm9wCiAqCiAqIFJldHVybiBhIGNvbXBsZXRlIHN0cmluZyBpZiBub25lIHByb3ZpZGVkCiAqIEBwYXJhbSB7T2JqZWN0fSB0YWcgZnJvbSBmcm9udG1hdHRlciBvciBzaXRlTWV0YVRhZ3MKICogQHJldHVybnMge1N0cmluZ30KICovCgoKZnVuY3Rpb24gbWV0YUlkZW50aWZpZXIodGFnKSB7CiAgZm9yICh2YXIgX2kgPSAwLCBfYXJyID0gWyduYW1lJywgJ3Byb3BlcnR5JywgJ2l0ZW1wcm9wJ107IF9pIDwgX2Fyci5sZW5ndGg7IF9pKyspIHsKICAgIHZhciBpdGVtID0gX2FycltfaV07CiAgICBpZiAodGFnLmhhc093blByb3BlcnR5KGl0ZW0pKSByZXR1cm4gdGFnW2l0ZW1dICsgaXRlbTsKICB9CgogIHJldHVybiBKU09OLnN0cmluZ2lmeSh0YWcpOwp9Ci8qKgogKiBSZW5kZXIgbWV0YSB0YWdzCiAqCiAqIEBwYXJhbSB7QXJyYXl9IG1ldGEKICogQHJldHVybnMge1N0cmluZ30KICovCgoKZnVuY3Rpb24gcmVuZGVyUGFnZU1ldGEobWV0YSkgewogIGlmICghbWV0YSkgcmV0dXJuICcnOwogIHJldHVybiBtZXRhLm1hcChmdW5jdGlvbiAobSkgewogICAgdmFyIHJlcyA9ICI8bWV0YSI7CiAgICBPYmplY3Qua2V5cyhtKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgcmVzICs9ICIgIi5jb25jYXQoa2V5LCAiPVwiIikuY29uY2F0KG1ba2V5XSwgIlwiIik7CiAgICB9KTsKICAgIHJldHVybiByZXMgKyAiPiI7CiAgfSkuam9pbignXG4gICAgJyk7Cn0="},{"version":3,"sources":["D:/mygithub/myblogs/node_modules/@vuepress/core/lib/client/root-mixins/updateMeta.js"],"names":["unionBy","created","siteMeta","$site","headTags","filter","headerType","map","_","headerValue","$ssrContext","mergedMetaItems","getMergedMetaTags","title","$title","lang","$lang","pageMeta","renderPageMeta","mounted","currentMetaTags","document","querySelectorAll","updateMeta","methods","documentElement","newMetaTags","updateMetaTags","$page","frontmatter","meta","name","content","$description","metaIdentifier","watch","beforeDestroy","c","parentNode","head","forEach","removeChild","m","tag","createElement","Object","keys","key","setAttribute","appendChild","item","hasOwnProperty","JSON","stringify","res","join"],"mappings":";;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,eAAe;AACb;AACAC,EAAAA,OAFa,qBAEF;AACT,SAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CACbC,MADa,CACN;AAAA;AAAA,UAAEC,UAAF;;AAAA,aAAkBA,UAAU,KAAK,MAAjC;AAAA,KADM,EAEbC,GAFa,CAET;AAAA;AAAA,UAAEC,CAAF;AAAA,UAAKC,WAAL;;AAAA,aAAsBA,WAAtB;AAAA,KAFS,CAAhB;;AAIA,QAAI,KAAKC,WAAT,EAAsB;AACpB,UAAMC,eAAe,GAAG,KAAKC,iBAAL,EAAxB;AAEA,WAAKF,WAAL,CAAiBG,KAAjB,GAAyB,KAAKC,MAA9B;AACA,WAAKJ,WAAL,CAAiBK,IAAjB,GAAwB,KAAKC,KAA7B;AACA,WAAKN,WAAL,CAAiBO,QAAjB,GAA4BC,cAAc,CAACP,eAAD,CAA1C;AACD;AACF,GAdY;AAeb;AACAQ,EAAAA,OAhBa,qBAgBF;AACT;AACA,SAAKC,eAAL,sBAA2BC,QAAQ,CAACC,gBAAT,CAA0B,MAA1B,CAA3B,EAFS,CAIT;;AACA,SAAKC,UAAL;AACD,GAtBY;AAwBbC,EAAAA,OAAO,EAAE;AACPD,IAAAA,UADO,wBACO;AACZF,MAAAA,QAAQ,CAACR,KAAT,GAAiB,KAAKC,MAAtB;AACAO,MAAAA,QAAQ,CAACI,eAAT,CAAyBV,IAAzB,GAAgC,KAAKC,KAArC;AAEA,UAAMU,WAAW,GAAG,KAAKd,iBAAL,EAApB;AACA,WAAKQ,eAAL,GAAuBO,cAAc,CAACD,WAAD,EAAc,KAAKN,eAAnB,CAArC;AACD,KAPM;AASPR,IAAAA,iBATO,+BASc;AACnB,UAAMK,QAAQ,GAAG,KAAKW,KAAL,CAAWC,WAAX,CAAuBC,IAAvB,IAA+B,EAAhD,CADmB,CAEnB;AACA;;AACA,aAAO9B,OAAO,CAAC,CAAC;AAAE+B,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAE,KAAKC;AAArC,OAAD,CAAD,EACZhB,QADY,EACF,KAAKf,QADH,EACagC,cADb,CAAd;AAED;AAfM,GAxBI;AA0CbC,EAAAA,KAAK,EAAE;AACLP,IAAAA,KADK,mBACI;AACP,WAAKL,UAAL;AACD;AAHI,GA1CM;AAgDba,EAAAA,aAhDa,2BAgDI;AACfT,IAAAA,cAAc,CAAC,IAAD,EAAO,KAAKP,eAAZ,CAAd;AACD;AAlDY,CAAf;AAqDA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASO,cAAT,CAAyBD,WAAzB,EAAsCN,eAAtC,EAAuD;AACrD,MAAIA,eAAJ,EAAqB;AACnB,uBAAIA,eAAJ,EACOf,MADP,CACc,UAAAgC,CAAC;AAAA,aAAIA,CAAC,CAACC,UAAF,KAAiBjB,QAAQ,CAACkB,IAA9B;AAAA,KADf,EAEOC,OAFP,CAEe,UAAAH,CAAC;AAAA,aAAIhB,QAAQ,CAACkB,IAAT,CAAcE,WAAd,CAA0BJ,CAA1B,CAAJ;AAAA,KAFhB;AAGD;;AACD,MAAIX,WAAJ,EAAiB;AACf,WAAOA,WAAW,CAACnB,GAAZ,CAAgB,UAAAmC,CAAC,EAAI;AAC1B,UAAMC,GAAG,GAAGtB,QAAQ,CAACuB,aAAT,CAAuB,MAAvB,CAAZ;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYJ,CAAZ,EAAeF,OAAf,CAAuB,UAAAO,GAAG,EAAI;AAC5BJ,QAAAA,GAAG,CAACK,YAAJ,CAAiBD,GAAjB,EAAsBL,CAAC,CAACK,GAAD,CAAvB;AACD,OAFD;AAGA1B,MAAAA,QAAQ,CAACkB,IAAT,CAAcU,WAAd,CAA0BN,GAA1B;AACA,aAAOA,GAAP;AACD,KAPM,CAAP;AAQD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAST,cAAT,CAAyBS,GAAzB,EAA8B;AAC5B,0BAAmB,CAAC,MAAD,EAAS,UAAT,EAAqB,UAArB,CAAnB,0BAAqD;AAAhD,QAAMO,IAAI,WAAV;AACH,QAAIP,GAAG,CAACQ,cAAJ,CAAmBD,IAAnB,CAAJ,EAA8B,OAAOP,GAAG,CAACO,IAAD,CAAH,GAAYA,IAAnB;AAC/B;;AACD,SAAOE,IAAI,CAACC,SAAL,CAAeV,GAAf,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASzB,cAAT,CAAyBY,IAAzB,EAA+B;AAC7B,MAAI,CAACA,IAAL,EAAW,OAAO,EAAP;AACX,SAAOA,IAAI,CAACvB,GAAL,CAAS,UAAAmC,CAAC,EAAI;AACnB,QAAIY,GAAG,UAAP;AACAT,IAAAA,MAAM,CAACC,IAAP,CAAYJ,CAAZ,EAAeF,OAAf,CAAuB,UAAAO,GAAG,EAAI;AAC5BO,MAAAA,GAAG,eAAQP,GAAR,gBAAgBL,CAAC,CAACK,GAAD,CAAjB,OAAH;AACD,KAFD;AAGA,WAAOO,GAAG,MAAV;AACD,GANM,EAMJC,IANI,CAMC,QAND,CAAP;AAOD","sourcesContent":["import unionBy from 'lodash/unionBy'\n\nexport default {\n  // created will be called on both client and ssr\n  created () {\n    this.siteMeta = this.$site.headTags\n      .filter(([headerType]) => headerType === 'meta')\n      .map(([_, headerValue]) => headerValue)\n\n    if (this.$ssrContext) {\n      const mergedMetaItems = this.getMergedMetaTags()\n\n      this.$ssrContext.title = this.$title\n      this.$ssrContext.lang = this.$lang\n      this.$ssrContext.pageMeta = renderPageMeta(mergedMetaItems)\n    }\n  },\n  // Other life cycles will only be called at client\n  mounted () {\n    // init currentMetaTags from DOM\n    this.currentMetaTags = [...document.querySelectorAll('meta')]\n\n    // update title / meta tags\n    this.updateMeta()\n  },\n\n  methods: {\n    updateMeta () {\n      document.title = this.$title\n      document.documentElement.lang = this.$lang\n\n      const newMetaTags = this.getMergedMetaTags()\n      this.currentMetaTags = updateMetaTags(newMetaTags, this.currentMetaTags)\n    },\n\n    getMergedMetaTags () {\n      const pageMeta = this.$page.frontmatter.meta || []\n      // pageMetaTags have higher priority than siteMetaTags\n      // description needs special attention as it has too many entries\n      return unionBy([{ name: 'description', content: this.$description }],\n        pageMeta, this.siteMeta, metaIdentifier)\n    }\n  },\n\n  watch: {\n    $page () {\n      this.updateMeta()\n    }\n  },\n\n  beforeDestroy () {\n    updateMetaTags(null, this.currentMetaTags)\n  }\n}\n\n/**\n * Replace currentMetaTags with newMetaTags\n * @param {Array<Object>} newMetaTags\n * @param {Array<HTMLElement>} currentMetaTags\n * @returns {Array<HTMLElement>}\n */\nfunction updateMetaTags (newMetaTags, currentMetaTags) {\n  if (currentMetaTags) {\n    [...currentMetaTags]\n          .filter(c => c.parentNode === document.head)\n          .forEach(c => document.head.removeChild(c))\n  }\n  if (newMetaTags) {\n    return newMetaTags.map(m => {\n      const tag = document.createElement('meta')\n      Object.keys(m).forEach(key => {\n        tag.setAttribute(key, m[key])\n      })\n      document.head.appendChild(tag)\n      return tag\n    })\n  }\n}\n\n/**\n * Try to identify a meta tag by name, property or itemprop\n *\n * Return a complete string if none provided\n * @param {Object} tag from frontmatter or siteMetaTags\n * @returns {String}\n */\nfunction metaIdentifier (tag) {\n  for (const item of ['name', 'property', 'itemprop']) {\n    if (tag.hasOwnProperty(item)) return tag[item] + item\n  }\n  return JSON.stringify(tag)\n}\n\n/**\n * Render meta tags\n *\n * @param {Array} meta\n * @returns {String}\n */\n\nfunction renderPageMeta (meta) {\n  if (!meta) return ''\n  return meta.map(m => {\n    let res = `<meta`\n    Object.keys(m).forEach(key => {\n      res += ` ${key}=\"${m[key]}\"`\n    })\n    return res + `>`\n  }).join('\\n    ')\n}\n"]}]}