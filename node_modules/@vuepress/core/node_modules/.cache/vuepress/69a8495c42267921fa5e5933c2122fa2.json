{"remainingRequest":"D:\\mygithub\\myblogs\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\mygithub\\myblogs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\mygithub\\myblogs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\mygithub\\myblogs\\node_modules\\@vuepress-reco\\vuepress-plugin-bgm-player\\bin\\BgMusic.vue?vue&type=template&id=24d02062&scoped=true&","dependencies":[{"path":"D:\\mygithub\\myblogs\\node_modules\\@vuepress-reco\\vuepress-plugin-bgm-player\\bin\\BgMusic.vue","mtime":499162500000},{"path":"D:\\mygithub\\myblogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mygithub\\myblogs\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\mygithub\\myblogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mygithub\\myblogs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}